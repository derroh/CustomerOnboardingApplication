using DevExpress.XtraEditors;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using System.Data.Entity;

namespace CustomerOnboardingApplication
{
    public partial class Dashboard : DevExpress.XtraBars.Ribbon.RibbonForm
    {
        static string MembershipNumber = null;
        public Dashboard()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            entityServerModeSource1.QueryableSource = new CustomerOnboardingApplication.EF.OnboardEntities().members;
        }

        private void barButtonItem1_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            SaccoBook.Modules.SaccoMembers.SaccoMember _SaccoMember = new SaccoBook.Modules.SaccoMembers.SaccoMember();
            _SaccoMember.ShowDialog();
        }

        private void barButtonItem4_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (MembershipNumber != null)
            {
                SaccoBook.Modules.SaccoMembers.SaccoMemberInformation _SaccoMemberInformation = new SaccoBook.Modules.SaccoMembers.SaccoMemberInformation(MembershipNumber);
                _SaccoMemberInformation.ShowDialog();
            }                
        }

        private void barButtonItem3_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (MembershipNumber != null)
            {
                DialogResult dlr = XtraMessageBox.Show("Are you sure you want to delete record?", "System Confirmation", MessageBoxButtons.YesNo, MessageBoxIcon.Question);

                if (dlr == DialogResult.Yes)
                {
                    if (MembershipNumber != null)
                    {
                        if (SaccoBook.EF.MemberQueries.DeleteMember(MembershipNumber))
                        {
                            MembershipNumber = null;
                            XtraMessageBox.Show("The specified record has been successfully deleted", "Success", MessageBoxButtons.OK, MessageBoxIcon.Information);
                        }
                    }
                }
            }
        }

        private void gridView1_FocusedRowChanged(object sender, DevExpress.XtraGrid.Views.Base.FocusedRowChangedEventArgs e)
        {
            MembershipNumber = SaccoBook.AppResources.DevexpressFunctions.GetItemFocusedRowChanged(MembersGridView, sender, e, "MembershipNumber");
           // MembershipType = SaccoBook.AppResources.DevexpressFunctions.GetItemFocusedRowChanged(MembersGridView, sender, e, "MembershipType");
        }

        private void MembersGridView_RowClick(object sender, DevExpress.XtraGrid.Views.Grid.RowClickEventArgs e)
        {
            MembershipNumber = SaccoBook.AppResources.DevexpressFunctions.GetItemrowClick(MembersGridView, "MembershipNumber");
          //  MembershipType = AppResources.DevexpressFunctions.GetItemrowClick(MembersGridView, "MembershipType");
        }

        private void Dashboard_Load(object sender, EventArgs e)
        {
            string sqlMembers = SaccoBook.EF.MemberQueries.LoadMembersRecords();

            SaccoBook.AppResources.AppFunctions.LoadTable(MembersGridControl, MembersGridView, sqlMembers);

        }

        private void barButtonItem5_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            // This line of code is generated by Data Source Configuration Wizard
            entityServerModeSource1.QueryableSource = new CustomerOnboardingApplication.EF.OnboardEntities().members;
        }

        private void barButtonItem2_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (MembershipNumber != null)
            {
                SaccoBook.Modules.SaccoMembers.SaccoMemberInformation _SaccoMemberInformation = new SaccoBook.Modules.SaccoMembers.SaccoMemberInformation(MembershipNumber);
                _SaccoMemberInformation.ShowDialog();
            }
        }

        private void btn_SMS_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
           string res = LoanGuarantorSMS.Infobip.AddPersonToFlow("201", "Derrick", "Witness", "FEMALE", "L002", "Normal", "James Doe", "M0001", 5000, "254701964636", "derrick.abucheri@brightsofttech.co.ke", "Loan");
            XtraMessageBox.Show(res);
        }
    }
}
